{"ast":null,"code":"import { css, LitElement, html } from \"lit\";\nimport { query, property, customElement } from \"lit/decorators.js\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n\n  for (var i = decorators.length - 1, decorator; i >= 0; i--) if (decorator = decorators[i]) result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\n\nlet DsyInput = class extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.type = \"text\";\n    this.value = \"\";\n  }\n\n  handleInput(e) {\n    e.stopPropagation();\n    this.dispatchEvent(new CustomEvent(\"input\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        value: this.inputElement.value\n      }\n    }));\n  }\n\n  render() {\n    return html` <input type=\"${this.type}\" @input=${this.handleInput} .value=${this.value} /> `;\n  }\n\n};\nDsyInput.styles = css`\n    input {\n      padding: 8px 8px 8px 12px;\n      font-family: 'Public Sans', sans-serif;\n      font-style: normal;\n      font-weight: 400;\n      font-size: 14px;\n      line-height: 16px;\n      border: 1px solid var(--neutral-600);\n      background-color: var(--neutral-50);\n      border-radius: 4px;\n    }\n  `;\n\n__decorateClass([query(\"input\")], DsyInput.prototype, \"inputElement\", 2);\n\n__decorateClass([property()], DsyInput.prototype, \"type\", 2);\n\n__decorateClass([property()], DsyInput.prototype, \"value\", 2);\n\nDsyInput = __decorateClass([customElement(\"dsy-input\")], DsyInput);\nexport { DsyInput };","map":null,"metadata":{},"sourceType":"module"}